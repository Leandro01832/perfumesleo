@model business.Pedido

@{
    ViewBag.Title = "Edit";
}



@Scripts.Render("~/Scripts/jquery-1.10.2.js")
@Scripts.Render("~/Scripts/Cep.js")

<h2>Local da entrega</h2>

<div class="row">
    <div class="col-md-4">
        @Html.TextBox("txtCep", null, new { @class = "form-control", placeholder = "Digite o Cep" })
    </div>
    <div class="col-md-4">
        <button id="btnsend" class="btn btn-success">Consultar frete</button>
    </div>
</div>

<div class="row">
    <div class="col-md-12" id="divValor"></div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Pedido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdPedido)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.ValorPedido)
        @Html.HiddenFor(model => model.Cliente.IdCliente)
        @Html.HiddenFor(model => model.Datapedido)
        @Html.HiddenFor(model => model.Produtos)
        @Html.HiddenFor(model => model.Endereco.IdEndereco)       

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Estado", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Cidade", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Bairro", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Rua", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Numero", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Numero, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Endereco.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("Cep", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Endereco.Cep, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            var valor = 0.0;
            foreach (var produto in Model.Produtos)
            {
                valor += produto.Preco;
                <p><label>Codigo do produto: </label> @produto.IdProduto</p>
                <p>
                <label>Imagem do produto: </label>
                <img src="@Url.Content(produto.Imagem)" alt="Image" style="width:100px;height:150px;max-width: 100%; height: auto;" />
                </p>
                <p><label>Preço da peça de roupa: </label> @produto.Preco</p>                  
            } 
                <p><label>Valor total dos produtos: <input class="form-control" value="@valor.ToString("F2")" type="text" readonly id="precototal" name="precototal" /> </label></p>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Finalizar o pedido" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
@Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        var precoprod = document.getElementById("precoprodutos");
        var frete = document.getElementById("ValorFrete");
        var precototal = document.getElementById("precototal");



    $(document).ready(function () {
        $("#btnsend").click(function () {
            $.ajax({
                url: '@Url.Action("CorreiosCalc","Sales")',
                type: 'GET',
                contentType: 'application/json',
                data: {cep: $("#txtCep").val()},
                success: function (result) {
                    var v = 0.00 + parseFloat($("#precoprodutos").val());
                    $("#divValor").html("<label id='valor'> Valor do frete: R$ "
                        + result[0]
                        + "    Prazo de entrega " + result[1] + "</label> ");
                    $("#v").html("<label class='control-label col-md-3'>Valor do frete:  </label> <input class='form-control' id='ValorFrete' name='ValorFrete' type='text' value='" + result[0] + "' readonly> </input>");
                    $("#precototal").val(v.toFixed(2));
                },
                error: function (xhr, exception) {
                    alert("Erro ao calcular prazo!")
                }
            });





        });
    });

    </script>

}
